name: 'User management'
description: |-

  APIs for managing users
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user/get-user
    metadata:
      title: 'Get user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: 25
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "id": 25,
          "name": "Bob",
          "email": "Bob@example.com",
          "email_verified_at": null,
          "created_at": "2021-07-04T11:52:21.000000Z",
          "updated_at": "2021-07-04T11:52:21.000000Z",
          "number_of_threads_followed": 0,
          "number_of_votes": 0,
          "number_of_comments": 0,
          "avatar_url": "",
          "user_roles": [
          "user"
          ],
          "roles": [
          {
          "id": 9,
          "name": "user",
          "guard_name": "web",
          "created_at": "2021-06-05T16:44:16.000000Z",
          "updated_at": "2021-06-05T16:44:16.000000Z",
          "pivot": {
          "model_id": 25,
          "role_id": 9,
          "model_type": "App\\Models\\User"
          }
          }
          ]
          },
          "status": 200
          }
        headers: []
        description: '200'
      -
        status: 400
        content: |-
          {
          "errors": {
          "user_id": "User could not be printed properly. Check user ID."
          },
          "status": 400
          }
        headers: []
        description: '400, user not found'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/get-users
    metadata:
      title: 'Get users'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [
          {
          "id": 24,
          "name": "New Test :)",
          "email": "newtest123@test.com",
          "email_verified_at": null,
          "created_at": "2021-07-04T11:41:55.000000Z",
          "updated_at": "2021-07-04T11:41:55.000000Z",
          "number_of_threads_followed": 0,
          "number_of_votes": 0,
          "number_of_comments": 0,
          "avatar_url": "",
          "user_roles": [
          "user"
          ],
          "roles": [
          {
          "id": 9,
          "name": "user",
          "guard_name": "web",
          "created_at": "2021-06-05T16:44:16.000000Z",
          "updated_at": "2021-06-05T16:44:16.000000Z",
          "pivot": {
          "model_id": 24,
          "role_id": 9,
          "model_type": "App\\Models\\User"
          }
          }
          ]
          },
          {
          "id": 25,
          "name": "Bob",
          "email": "Bob@example.com",
          "email_verified_at": null,
          "created_at": "2021-07-04T11:52:21.000000Z",
          "updated_at": "2021-07-04T11:52:21.000000Z",
          "number_of_threads_followed": 0,
          "number_of_votes": 0,
          "number_of_comments": 0,
          "avatar_url": "",
          "user_roles": [
          "user"
          ],
          "roles": [
          {
          "id": 9,
          "name": "user",
          "guard_name": "web",
          "created_at": "2021-06-05T16:44:16.000000Z",
          "updated_at": "2021-06-05T16:44:16.000000Z",
          "pivot": {
          "model_id": 25,
          "role_id": 9,
          "model_type": "App\\Models\\User"
          }
          }
          ]
          }
          ],
          "status": 200
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/edit-user
    metadata:
      title: 'Edit user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: 25
        type: integer
      password:
        name: password
        description: ''
        required: true
        example: bobross25
        type: string
      password_confirmation:
        name: password_confirmation
        description: ''
        required: true
        example: bobross25
        type: string
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "success": "User edited successfully."
          },
          "status": 200
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/edit-avatar
    metadata:
      title: 'Edit avatar'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: 25
        type: integer
      avatar:
        name: avatar
        description: ''
        required: true
        example: null
        type: file
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "success": "Avatar edited successfully."
          },
          "status": 200
          }
        headers: []
        description: '200'
    responseFields: []
